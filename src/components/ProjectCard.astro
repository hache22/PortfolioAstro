---
import GitHub from "../components/icons/Github.astro";
import Link from "../components/icons/Link.astro";
import PowerBI from "./icons/PowerBI.astro";
import Star from "./icons/Star.astro";

interface ProjectTag {
    name: string;
    class: string;
    icon: any;
}

interface Props {
    title: string;
    description: string;
    tags: ProjectTag[];
    url?: string;
    image: string;
    github?: string;
    avatarUrl?: string | null;
    repoData?: any;
}

const {
    title,
    description,
    tags,
    url,
    image,
    github,
    avatarUrl,
    repoData
} = Astro.props;

const isPowerBI = url?.includes('.pbix') || title?.includes('Power Bi');
const isDashboard = title?.includes('Dashboard');
const isInforme = title?.includes('Informe');
const isAllProjects = title?.includes('Todos los Proyectos');

const getButtonText = () => {
    if (isPowerBI) return 'Descargar .pbix';
    if (isDashboard) return 'Ver Dashboard';
    if (isInforme) return 'Ver Informe';
    if (isAllProjects) return 'Ver Todos los Proyectos';
    return 'Ver Informe';
};
---

<div
    class="group h-full bg-white/10 backdrop-blur-lg rounded-xl overflow-hidden border border-gray-300/10 dark:border-gray-700/30 hover:border-gray-300/50 dark:hover:border-gray-700/50 transition-all duration-300 flex flex-col"
>
    <div class="relative overflow-hidden cursor-pointer" id={isPowerBI ? 'powerbi-preview' : ''}>
        <div class="relative w-full aspect-video overflow-hidden bg-gray-50 dark:bg-gray-900">
            <img
                class={`w-full h-full ${isDashboard ? 'object-contain' : 'object-cover'} transition-transform duration-300`}
                src={image}
                alt={title}
                loading="lazy"
            />
            <div class="absolute inset-0 flex items-center justify-center bg-black/50 opacity-0 group-hover:opacity-100 transition-all duration-300">
                <div class="flex flex-col gap-3">
                    {url && (
                        <a
                            href={url}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="inline-flex items-center gap-2 px-4 py-2 text-sm font-medium text-white bg-blue-600/80 hover:bg-blue-600 rounded-lg backdrop-blur-sm transition-all duration-200 transform hover:scale-105"
                        >
                            {isPowerBI ? <PowerBI class="size-5" /> : <Link class="size-5" />}
                            {getButtonText()}
                        </a>
                    )}
                    {github && (
                        <a
                            href={github}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="inline-flex items-center gap-2 px-4 py-2 text-sm font-medium text-white bg-gray-800/80 hover:bg-gray-800 rounded-lg backdrop-blur-sm transition-all duration-200 transform hover:scale-105"
                        >
                            {avatarUrl && (
                                <img
                                    src={avatarUrl}
                                    alt="GitHub Avatar"
                                    class="w-5 h-5 rounded-full ring-2 ring-white/20"
                                />
                            )}
                            <GitHub class="size-5" />
                            Ver Repositorio Completo
                        </a>
                    )}
                </div>
            </div>
        </div>
    </div>

    <div class="p-6 flex-1 flex flex-col">
        <div class="flex items-center gap-3 mb-4">
            <h3 class="text-xl font-semibold text-gray-900 dark:text-gray-100 line-clamp-2 min-h-[3.5rem] hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-300">
                {title}
            </h3>
        </div>

        <div class="flex-1">
            {github && repoData ? (
                <div class="space-y-4">
                    <p class="text-gray-800 dark:text-gray-200 line-clamp-3 min-h-[4.5rem] font-light tracking-wide">
                        {repoData.description || description}
                    </p>
                    <div class="flex items-center gap-4 text-sm text-gray-600 dark:text-gray-300">
                        {repoData.language && (
                            <span class="flex items-center gap-1">
                                <span class="w-2 h-2 rounded-full bg-blue-500"></span>
                                {repoData.language}
                            </span>
                        )}
                        {repoData.stargazers_count > 0 && (
                            <span class="flex items-center gap-1">
                                <Star class="size-4" />
                                {repoData.stargazers_count}
                            </span>
                        )}
                    </div>
                </div>
            ) : (
                <p class="text-gray-800 dark:text-gray-200 line-clamp-3 min-h-[4.5rem] font-light tracking-wide">
                    {description}
                </p>
            )}
        </div>

        <div class="mt-auto pt-4">
            <ul class="flex flex-wrap gap-2">
                {
                    tags.map((tag: { class: string; icon: any; name: string }) => (
                        <li>
                            <button
                                class={`tag-btn flex items-center gap-1.5 text-xs px-3.5 py-1.5 rounded-full ${tag.class} transition-all duration-300 font-medium shadow-sm hover:shadow-md hover:scale-105 active:scale-95`}
                                data-tag={tag.name}
                            >
                                <tag.icon class="size-4" />
                                {tag.name}
                            </button>
                        </li>
                    ))
                }
            </ul>
        </div>
    </div>
</div>

<!-- Modal para Power BI -->
{isPowerBI && (
    <div id="powerbi-modal" class="fixed inset-0 z-50 hidden">
        <div class="absolute inset-0 bg-black/80 backdrop-blur-sm"></div>
        <div class="absolute inset-4 md:inset-10 bg-white dark:bg-gray-900 rounded-xl overflow-hidden shadow-2xl">
            <div class="absolute top-4 right-4 z-10">
                <button id="close-modal" class="p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">
                    <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
            <iframe
                class="w-full h-full"
                src={url?.replace('.pbix', '')}
                allowfullscreen
            ></iframe>
        </div>
    </div>
)}

<style>
    /* Aseguramos que las tarjetas tengan la misma altura en la cuadr√≠cula */
    div {
        display: flex;
        flex-direction: column;
    }

    /* Mejora de la legibilidad del texto */
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .line-clamp-3 {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    #powerbi-modal {
        animation: modal-fade 0.3s ease-out;
    }

    @keyframes modal-fade {
        from {
            opacity: 0;
            transform: scale(0.95);
        }
        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    .tag-btn {
        cursor: pointer;
    }

    .tag-btn[data-active="true"] {
        transform: scale(1.05);
        font-weight: 600;
    }

    h3 {
        background: linear-gradient(to right, var(--color-text), var(--color-text));
        background-size: 200% 100%;
        background-position: 0% 0%;
        transition: background-position 0.3s ease;
    }

    h3:hover {
        background-position: 100% 0%;
    }
</style>

<script>
    const tagButtons = document.querySelectorAll<HTMLElement>('.tag-btn');

    tagButtons.forEach(button => {
        button.addEventListener('click', () => {
            const tag = button.getAttribute('data-tag');
            if (tag) {
                filterProjectsByTag(tag);
                updateActiveButton(button);
            }
        });
    });

    function updateActiveButton(activeButton: HTMLElement) {
        tagButtons.forEach(button => {
            button.classList.remove('bg-yellow-500', 'text-white');
            button.classList.add('bg-gray-200', 'text-gray-700', 'dark:bg-gray-700', 'dark:text-gray-300');
        });

        activeButton.classList.remove('bg-gray-200', 'text-gray-700', 'dark:bg-gray-700', 'dark:text-gray-300');
        activeButton.classList.add('bg-yellow-500', 'text-white');
    }

    function filterProjectsByTag(tag: string) {
        const projects = document.querySelectorAll('.project-card');

        projects.forEach(project => {
            const projectTags = project.getAttribute('data-tags')?.split(',') || [];
            if (tag === 'all' || projectTags.includes(tag)) {
                project.classList.remove('hidden');
            } else {
                project.classList.add('hidden');
            }
        });
    }
</script>
